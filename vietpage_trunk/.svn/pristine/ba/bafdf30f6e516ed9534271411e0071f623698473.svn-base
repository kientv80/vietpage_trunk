package com.vnsoft.server.actions;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.log4j.Logger;
import org.apache.tomcat.util.net.URL;

import com.vnsoft.server.biz.CompanyBean;
import com.vnsoft.server.biz.MenuBean;
import com.vnsoft.server.biz.NewsBean;
import com.vnsoft.server.biz.ServiceTypeBean;
import com.vnsoft.server.biz.VisistorBean;
import com.vnsoft.server.model.CompanyInfo;
import com.vnsoft.server.model.Item;
import com.vnsoft.server.model.Menu;
import com.vnsoft.server.model.News;

public class MyPageAction extends BaseAction {
	private static final int MAX_GET_ITEMS = 50;
	/**
	 * 
	 */
	private static final long serialVersionUID = 6922704335078532732L;
	private String content;
	private List<News> news = new ArrayList<>();
	private List<Item> items = new ArrayList<>();
	private List<Item> newItems = new ArrayList<>();
	private List<CompanyInfo> suggestComs = new ArrayList<>();
	private int locationId;
	private int serviceTypeId;
	private int selectedCity;
	private String searchText;
	private List<CompanyInfo> companies = new ArrayList<>();
	private Logger logger = Logger.getLogger(MyPageAction.class);
	private List<Item> suggestItems = new ArrayList<>();
	private List<Menu> menus;
	private Map<String, Menu> menuTabs = new HashMap<>();
	private String displayTabs = "";
	public List<CompanyInfo> getCompanies() {
		return companies;
	}

	public void setCompanies(List<CompanyInfo> companies) {
		this.companies = companies;
	}

	@Override
	public String execute() {
		try {
			URL url = new URL(getHttpServletRequest().getRequestURL().toString());
			String pageName = url.getPath();
			String visistorId = getVisistorId();
			Map<String, List<Integer>> scores = VisistorBean.getInstance().getUserInterestedScores(visistorId);
			if ("/home".equals(pageName) || "/".equals(pageName)) {
				loadSearchCategories();
				logger.debug("MyPageAction: action=" + getAction() + " serviceTypeId=" + serviceTypeId);
				if ("filter".equals(getAction())) {
					news = NewsBean.getInstance().getAllNews(MAX_GET_ITEMS, serviceTypeId);
					items = MenuBean.getInstance().getDiscountedItems(MAX_GET_ITEMS, serviceTypeId);
					newItems = MenuBean.getInstance().getNewItems(MAX_GET_ITEMS, serviceTypeId);
				} else if ("search".equals(getAction())) {
					setCompanies(CompanyBean.getInstance().getCompanyInfo(locationId, serviceTypeId, searchText));
					for (CompanyInfo com : companies) {
						if (com.getDescription() != null && com.getDescription().length() > 400)
							com.setDescription(com.getDescription().substring(0, 200) + " ... ");
						if (searchText != null && !searchText.isEmpty())
							com.setName(com.getName().replaceAll(searchText, "<b>" + searchText + "</b>"));
					}
				} else {
					if ("discount".equals(getAction())) {
						suggestItems.clear();
						if (scores.get(VisistorBean.TOP3_MOST_INTERESTED_SERVICES).size() > 0) {
							ServiceTypeBean.getInstance().getServiceTypes(scores.get(VisistorBean.TOP3_MOST_INTERESTED_SERVICES));
							menus = MenuBean.getInstance().getDiscountedItems(MAX_GET_ITEMS, ServiceTypeBean.getInstance().getServiceTypes(scores.get(VisistorBean.TOP3_MOST_INTERESTED_SERVICES)));
						}else{
							menus = MenuBean.getInstance().getDiscountedItems(MAX_GET_ITEMS, ServiceTypeBean.getInstance().getHotServiceType());
						}
						if(menus == null || menus.size()==0)
							menus = MenuBean.getInstance().getDiscountedItems(MAX_GET_ITEMS, ServiceTypeBean.getInstance().getHotServiceType());
						
						for (Menu m : menus) {
							if(m.getItems().size() > 0){
								getMenuTabs().put(m.getId() + "", m);
								setDisplayTabs(getDisplayTabs() + m.getId() + ":" + m.getName() + ",");
								shottenItemDesc( m.getItems());
							}
						}
						if (getDisplayTabs() != null && getDisplayTabs().length() > 0)
							setDisplayTabs(getDisplayTabs().substring(0, getDisplayTabs().length() - 1));
						
						trackingVisit("vietpage_discount");
					} else if ("newItems".equals(getAction())) {
						suggestItems.clear();
						if (scores.get(VisistorBean.TOP3_MOST_INTERESTED_SERVICES).size() > 0) {
							ServiceTypeBean.getInstance().getServiceTypes(scores.get(VisistorBean.TOP3_MOST_INTERESTED_SERVICES));
							menus = MenuBean.getInstance().getNewItems(MAX_GET_ITEMS, ServiceTypeBean.getInstance().getServiceTypes(scores.get(VisistorBean.TOP3_MOST_INTERESTED_SERVICES)));
						}else{
							menus = MenuBean.getInstance().getNewItems(MAX_GET_ITEMS, ServiceTypeBean.getInstance().getHotServiceType());
						}
						if(menus == null || menus.size()==0)
							menus = MenuBean.getInstance().getNewItems(MAX_GET_ITEMS, ServiceTypeBean.getInstance().getHotServiceType());
						
						for (Menu m : menus) {
							if(m.getItems().size() > 0){
								getMenuTabs().put(m.getId() + "", m);
								setDisplayTabs(getDisplayTabs() + m.getId() + ":" + m.getName() + ",");
								shottenItemDesc( m.getItems());
							}
						}
						if (getDisplayTabs() != null && getDisplayTabs().length() > 0)
							setDisplayTabs(getDisplayTabs().substring(0, getDisplayTabs().length() - 1));
						
						trackingVisit("vietpage_newItems");
					} else if ("news".equals(getAction())) {
						suggestItems.clear();
						if (scores.get(VisistorBean.TOP3_MOST_INTERESTED_SERVICES).size() > 0) {
							for (int sid : scores.get(VisistorBean.TOP3_MOST_INTERESTED_SERVICES)) {
								news.addAll(NewsBean.getInstance().getAllNews(MAX_GET_ITEMS, sid));
							}
						}
						if (news != null && news.size() == 0) {
							news.addAll(NewsBean.getInstance().getAllNews(MAX_GET_ITEMS, 0));
						}
						trackingVisit("vietpage_news");
					} else {

						if (scores.get(VisistorBean.TOP3_MOST_INTERESTED_SERVICES).size() > 0) {
							ServiceTypeBean.getInstance().getServiceTypes(scores.get(VisistorBean.TOP3_MOST_INTERESTED_SERVICES));
							menus = MenuBean.getInstance().getNewItems(MAX_GET_ITEMS, ServiceTypeBean.getInstance().getServiceTypes(scores.get(VisistorBean.TOP3_MOST_INTERESTED_SERVICES)));
						}else{
							menus = MenuBean.getInstance().getNewItems(MAX_GET_ITEMS, ServiceTypeBean.getInstance().getHotServiceType());
						}

						if(menus == null || menus.size()==0)
							menus = MenuBean.getInstance().getNewItems(MAX_GET_ITEMS, ServiceTypeBean.getInstance().getHotServiceType());
						
						for (Menu m : menus) {
							if(m.getItems().size() > 0){
								getMenuTabs().put(m.getId() + "", m);
								setDisplayTabs(getDisplayTabs() + m.getId() + ":" + m.getName() + ",");
								shottenItemDesc( m.getItems());
							}
						}
						if (getDisplayTabs() != null && getDisplayTabs().length() > 0)
							setDisplayTabs(getDisplayTabs().substring(0, getDisplayTabs().length() - 1));
						
						trackingVisit("vietpage_home");
					}
				}
				shottenItemDesc(items);
				shottenItemDesc(newItems);
				System.out.println("Service interested = " + scores.get(VisistorBean.TOP3_MOST_INTERESTED_SERVICES).size());
				if (scores.get(VisistorBean.TOP3_MOST_INTERESTED_SERVICES).size() > 0) {
					suggestItems.clear();
					suggestComs.clear();
					for (int sid : scores.get(VisistorBean.TOP3_MOST_INTERESTED_SERVICES)) {
						System.out.println("Interested service id=" + sid);
						getSuggestComs().addAll(CompanyBean.getInstance().getCompanyInfoByService(sid, 2));
						if (getAction() == null || getAction().isEmpty()) {
							List<Item> tmp = MenuBean.getInstance().getNewItems(4, sid);
							getSuggestItems().addAll(tmp);
						}
					}
					if (suggestItems != null && suggestItems.size() > 0)
						shottenItemDesc(suggestItems);
					if (suggestComs.size() > 0) {
						for (CompanyInfo c : suggestComs) {
							if (c.getDescription() != null && (c.getDescription().length() > 200)) {
								c.setDescription(c.getDescription().substring(0, 200) + " ...");
							}
						}
					}
				}

			} else {
				System.out.println(">>>>>>>>>>>>>Redirect to :" + "/vietpage?page=" + pageName.substring(1, pageName.length()));
				getHttpServletRequest().setAttribute("page", pageName.substring(1, pageName.length()));
				return "vietpage";
			}

		} catch (Exception e) {
			logger.error("", e);
			e.printStackTrace();
		}
		if ("news".equals(getAction())) {
			return "news";
		}
		return SUCCESS;
	}

	public String getContent() {
		return content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	public List<News> getNews() {
		return news;
	}

	public void setNews(List<News> news) {
		this.news = news;
	}

	public List<Item> getItems() {
		return items;
	}

	public void setItems(List<Item> items) {
		this.items = items;
	}

	public int getServiceTypeId() {
		return serviceTypeId;
	}

	public void setServiceTypeId(int serviceTypeId) {
		this.serviceTypeId = serviceTypeId;
	}

	public List<Item> getNewItems() {
		return newItems;
	}

	public void setNewItems(List<Item> newItems) {
		this.newItems = newItems;
	}

	public int getLocationId() {
		return locationId;
	}

	public void setLocationId(int locationId) {
		this.locationId = locationId;
	}

	public int getSelectedCity() {
		return selectedCity;
	}

	public void setSelectedCity(int selectedCity) {
		this.selectedCity = selectedCity;
	}

	public String getSearchText() {
		return searchText;
	}

	public void setSearchText(String searchText) {
		this.searchText = searchText;
	}

	public List<CompanyInfo> getSuggestComs() {
		return suggestComs;
	}

	public void setSuggestComs(List<CompanyInfo> suggestComs) {
		this.suggestComs = suggestComs;
	}

	public List<Item> getSuggestItems() {
		return suggestItems;
	}

	public void setSuggestItems(List<Item> suggestItems) {
		this.suggestItems = suggestItems;
	}

	public List<Menu> getMenus() {
		return menus;
	}

	public void setMenus(List<Menu> menus) {
		this.menus = menus;
	}

	public Map<String, Menu> getMenuTabs() {
		return menuTabs;
	}

	public void setMenuTabs(Map<String, Menu> menuTabs) {
		this.menuTabs = menuTabs;
	}

	public String getDisplayTabs() {
		return displayTabs;
	}

	public void setDisplayTabs(String displayTabs) {
		this.displayTabs = displayTabs;
	}
}
